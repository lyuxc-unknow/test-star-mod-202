apply {
    from rootProject.file("buildSrc/build.gradle")
}

sourceSets {
    main {
        resources {
            srcDir("src/generated/resources")
        }
    }
}

java.toolchain.languageVersion.set(JavaLanguageVersion.of(21))

dependencies {
    runtimeOnly "dev.technici4n:GrandPower:3.0.0"

    implementation project(":mind-core")
    implementation "curse.maven:theoneprobe-245211:5502323"

    implementation "appeng:appliedenergistics2:19.0.22-beta"
    implementation "curse.maven:glodium-957920:5614731"
    implementation "curse.maven:advancedae-1084104:5721618"
    implementation "curse.maven:ex-pattern-provider-892005:5680210"

    implementation "aztech:Modern-Industrialization:2.2.9-beta"
}

neoForge {
    version = neo_version

    parchment {
        minecraftVersion = parchment_minecraft_version
        mappingsVersion = parchment_mappings_version
    }

    runs {
        configureEach {
            logLevel = org.slf4j.event.Level.INFO
        }

        create("client") {
            client()
        }

        create("data") {
            data()

            programArguments= [
                    "--mod", "test_star_top_compat",
//                    "--all",
                    "--server", "--client",
                    "--output", file("src/generated/resources").absolutePath,
                    "--existing", file("src/main/resources").absolutePath,
                    "--existing", file("../test_star_top_compat/src/main/resources").absolutePath,
                    "--existing", file("../test_star_top_compat/src/generated/resources").absolutePath
            ]
        }

        create("server") {
            server()
        }
    }

    mods {
        create("mind-topcompat") {
            sourceSet(sourceSets["main"])
        }
    }
}
publishing {
    publications {
        register('mavenJava', MavenPublication) {
            from components.java
        }
    }
}
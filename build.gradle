plugins {
    id 'java-library'
    id 'idea'
    id 'maven-publish'
    id 'net.neoforged.gradle.userdev' version '7.0.+'
}

version = mod_version
group = mod_group_id

base {
    archivesName = mod_id
}

java.toolchain.languageVersion = JavaLanguageVersion.of(21)


minecraft {
    accessTransformers {}
}

runs {
    configureEach {
        // "SCAN": For mods scan.
        // "REGISTRIES": For firing of registry events.
        // "REGISTRYDUMP": For getting the contents of all registries.
        systemProperty 'neoforge.logging.markers', 'REGISTRIES'
        systemProperty 'neoforge.logging.console.level', 'debug'
        modSource project.sourceSets.main
    }

    client {
        systemProperty 'neoforge.enabledGameTestNamespaces', project.mod_id
        programArguments('--username', 'lyuxc_')
        programArguments('--uuid', "ce691642-c635-44a0-9d25-8856ccfc9ab1")
    }

    server {
        systemProperty 'neoforge.enabledGameTestNamespaces', project.mod_id
        programArgument '--nogui'
    }
    gameTestServer {
        systemProperty 'neoforge.enabledGameTestNamespaces', project.mod_id
    }

    data {
        programArguments.addAll '--mod', project.mod_id, '--all', '--output', file('src/generated/resources/').getAbsolutePath(), '--existing', file('src/main/resources/').getAbsolutePath()
    }
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    mavenLocal()
    maven {
        url "https://cursemaven.com/"
        content {
            includeGroup "curse.maven"
        }
    }
    maven {
        name = "Jared's maven"
        url = "https://maven.blamejared.com/"
    }
    maven {
        url = "https://maven.k-4u.nl"
    }
    maven {
        url = "http://localhost:8080/repository/maven-public/"
        allowInsecureProtocol = true
    }
    maven {
        name = 'GeckoLib'
        url 'https://dl.cloudsmith.io/public/geckolib3/geckolib/maven/'
        content {
            includeGroup("software.bernie.geckolib")
        }
    }
    maven {
        name "Modmaven"
        url "https://modmaven.dev/"
        content {
            includeGroup 'appeng'
            includeGroup 'aztech'
            includeGroup 'dev.technici4n'
        }
    }
    maven {
        name "shedaniel Maven"
        url "https://maven.shedaniel.me/"
    }
}
dependencies {
    implementation "net.neoforged:neoforge:${neo_version}"
    implementation jarJar("mod.lyuxc.Jrrp:Jrrp-1.20.6:1.0.1-neoforge")
    implementation jarJar("mod.lyuxc.MagicClover:Magic-Clover-1.20.6:1.0.0-neoforge")

    compileOnly "curse.maven:mcwifipnp-450250:5317647"
    compileOnly("mezz.jei:jei-${minecraft_version}-common-api:${jei_version}")
    compileOnly("mezz.jei:jei-${minecraft_version}-neoforge-api:${jei_version}")
    runtimeOnly("mezz.jei:jei-${minecraft_version}-neoforge:${jei_version}")
    runtimeOnly "dev.technici4n:GrandPower:2.0.0"
    runtimeOnly "me.shedaniel.cloth:cloth-config-neoforge:14.0.126"

    implementation jarJar("mcjty.theoneprobe:TheOneProbe:1.20.6_neo-11.2.0")
    implementation "aztech:Modern-Industrialization:2.1.2-alpha"
    implementation "software.bernie.geckolib:geckolib-neoforge-${minecraft_version}:4.5.1"
    implementation "appeng:appliedenergistics2-neoforge:18.1.3-alpha"
}

tasks.withType(ProcessResources).configureEach {
    var replaceProperties = [
            minecraft_version   : minecraft_version, minecraft_version_range: minecraft_version_range,
            neo_version         : neo_version, neo_version_range: neo_version_range,
            loader_version_range: loader_version_range,
            mod_id              : mod_id, mod_name: mod_name, mod_license: mod_license, mod_version: mod_version,
            mod_authors         : mod_authors, mod_description: mod_description, pack_format_number: pack_format_number,
    ]
    inputs.properties replaceProperties

    filesMatching(['META-INF/neoforge.mods.toml'/*, 'pack.mcmeta'*/]) {
        expand replaceProperties + [project: project]
    }
}

jar {
    manifest {
        attributes([
                'Specification-Title'     : mod_id,
                'Specification-Vendor'    : mod_authors,
                'Specification-Version'   : '1',
                'Implementation-Title'    : project.name,
                'Implementation-Version'  : project.jar.archiveVersion,
                'Implementation-Vendor'   : mod_authors,
                'Implementation-Timestamp': new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}
publishing {
    publications {
        register('mavenJava', MavenPublication) {
            from components.java
        }
    }
    repositories {
        maven {
            url "http://localhost:8080/repository/maven-releases/"
            allowInsecureProtocol = true
            credentials {
                username = 'admin'
                password = '@lyuxc@'
            }
        }
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}